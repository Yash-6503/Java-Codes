Q1) Find the Output on Method Overloading with Ambiguity

class Test
{	
	public void accept(long ...b)   
	{
		System.out.println("long :");
	}
	    
	public void accept(double ...s)
	{
		System.out.println("double :");
	}	
	
	public void accept(float ...s)
	{
		System.out.println("float :");
	}	
}
public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		Test t1 = new Test();
		t1.accept();
	}
}

Output
long :	
---------------------------------------------------------------------------
Q2) Find the Output 

class Test
{	
	    
	public void accept(byte ...s)
	{
		System.out.println("byte :");
	}	
	
	public void accept(short ...s)
	{
		System.out.println("short :");
	}	
}
public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		Test t1 = new Test();
		t1.accept();

	}
}

Output
byte :
------------------------------------------------------------------
Q3) Find the Output 

class Test
{		    
	public void accept(int ...s)
	{
		System.out.println("int :");
	}	
	
	public void accept(boolean ...s)
	{
		System.out.println("boolean :");
	}	
}
public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		Test t1 = new Test();
		t1.accept();

	}
}

Output
error: reference to accept is ambiguous
                t1.accept();
                  ^
both method accept(int...) in Test1 and method accept(boolean...) in Test1 match
------------------------------------------------------------------
Q4) Find the Output 

class Test
{	
	    
	public void accept(int ...s)
	{
		System.out.println("int :");
	}	
	
	public void accept(short ...s)
	{
		System.out.println("short :");
	}	
}
public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		Test t1 = new Test();
		t1.accept();
	}
}

Output
short :
---------------------------------------------------------------------------
Q5) Find the Output 

class Test
{		    
	public void accept(int ...s)
	{
		System.out.println("int :");
	}	
	
	public void accept(char ...s)
	{
		System.out.println("char :");
	}	
}
public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		Test t1 = new Test();
		t1.accept();

	}

}

Output
char :
---------------------------------------------------------------------------
Q6) Find the Output 

class Test
{		    
	public void accept(short ...s)
	{
		System.out.println("short :");
	}	
	
	public void accept(char ...s)
	{
		System.out.println("char :");
	}	
}
public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		Test t1 = new Test();
		t1.accept();
	}
}

Output
error: reference to accept is ambiguous
                t1.accept();
                  ^
both method accept(short...) in Test1 and method accept(char...) in Test1 match
---------------------------------------------------------------------------
Q7) Find the Output 

class Test
{		    
	public void accept(byte b, int i) {
		System.out.println("byte-int");
	}
	public void accept(int i, byte b) {
		System.out.println("int-byte");
	}
}
public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		Test t1 = new Test();  
		t1.accept(1, 2);

	}

}

Output
error: no suitable method found for accept(int,int) posible lossy conversion
---------------------------------------------------------------------------
Q8) Find the Output 

class Test
{		    
	public void accept(byte b, int i) {
		System.out.println("byte-int");
	}
	public void accept(int i, byte b) {
		System.out.println("int-byte");
	}
}
public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		Test t1 = new Test(); 
		byte b1 = 1;
		byte b2 = 2;
		t1.accept(b1, b2);
	}
}

Output
error: reference to accept is ambiguous
                t1.accept(b1, b2);
                  ^
both method accept(byte,int) in Test1 and method accept(int,byte) in Test1 match
---------------------------------------------------------------------------
Q9) Find the Output 

class Test
{		    
	public void accept(int b, int i) {
		System.out.println("int-int");
	}
	public void accept(int i, byte b) {
		System.out.println("int-byte");
	}
}
public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		Test t1 = new Test(); 
		byte b1 = 1;
		byte b2 = 2;
		t1.accept(b1, b2);

	}
}

Output
int-byte
---------------------------------------------------------------------------
Q10) Find the Output 

class Test
{		    
	public void accept(int b, int i) {
		System.out.println("int-int");
	}
	public void accept(Byte i, int b) {
		System.out.println("byte-int");
	}
	public void accept(Byte b1 , byte b2) {
		System.out.println("Byte-byte");
	}
}
public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		Test t1 = new Test(); 
		byte b1 = 1;
		byte b2 = 2;
		t1.accept(b1, b2);
	}
}

Output
int-int
---------------------------------------------------------------------------
Q11) Find the Output 

class Test
{		    
	public void accept(int b, Integer i) {
		System.out.println("int-Integer");
	}
	public void accept(long i, int b) {
		System.out.println("long-int");
	}
	public void accept(long i, Object b) {
		System.out.println("long-Object");
	}
}
public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		Test t1 = new Test(); 
		t1.accept(2,4);

	}

}

Output
long-int
---------------------------------------------------------------------------
Q12) Find the Output 

class Test
{		    
	public void accept(int b, Integer i) {
		System.out.println("int-Integer");
	}
	
	public void accept(Byte b, byte i) {
		System.out.println("Byte-byte");
	}
	
	public void accept(byte... l) {
		System.out.println("byte...");
	}
}
public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		Test t1 = new Test(); 
		t1.accept(2,4);
		
		byte b1 = 8;
		byte b2 = 9;		
		t1.accept(b1, b2);

	}
}

Output
int-Integer
Byte-byte
---------------------------------------------------------------------------
Q13) Find the Output 

class Test
{		    
	public void accept(int ...s)
	{
		System.out.println("int var args :");
	}	
	
	public void accept(int x, int ...y)
	{
		System.out.println("int int var args");
	}	
}
public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		Test t1 = new Test();
		t1.accept(9);

	}
}

Output
int var args :
error: reference to accept is ambiguous
                t1.accept(9);
                  ^
both method accept(int...) in Test1 and method accept(int,int...) in Test1 match
---------------------------------------------------------------------------
Q14) Find the Output 

class Test
{		    
	public void accept(int x)
	{
		System.out.println("int");
	}	
	
	public void accept(long y)
	{
		System.out.println("long");
	}	
}
public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		Test t1 = new Test();
		t1.accept(9);

	}
}

Output
int
---------------------------------------------------------------------------
Q15) Find the Output 

class Test
{		    
	public void accept(String x)
	{
		System.out.println("String");
	}	
	
	public void accept(Object y)
	{
		System.out.println("Object");
	}	
}
public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		Test t1 = new Test();
		t1.accept("Ravi");
		t1.accept(null);
	}
}

Output
String 
String
---------------------------------------------------------------------------
Q16) Find the Output 

class Test
{		    
	public void accept(String x)
	{
		System.out.println("String");
	}
	
	public void accept(Integer x)
	{
		System.out.println("String");
	}	
	
	public void accept(Object y)
	{
		System.out.println("Object");
	}	
}
public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		Test t1 = new Test();
		t1.accept(null);

	}
}

Output
error: reference to accept is ambiguous
                t1.accept(null);
                  ^
both method accept(String) in Test1 and method accept(Integer) in Test1 match
---------------------------------------------------------------------------
Q17) Find the Output 

class Test
{		    
	public void accept(Integer x)
	{
		System.out.println("Integer");
	}	
	
	public void accept(long y)
	{
		System.out.println("long");
	}	
}
public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		Test t1 = new Test();
		t1.accept(15);

	}
}

Output
long
---------------------------------------------------------------------------
Q18) Find the Output 

class Test
{		    
	public void accept(Integer x)
	{
		System.out.println("Integer");
	}	
	
	public void accept(int ...y)
	{
		System.out.println("var args");
	}	
}
public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		Test t1 = new Test();
		t1.accept(15);

	}
}

Output
Integer
---------------------------------------------------------------------------
Q19) Find the Output 

class Test
{		    
	public void accept(long x)
	{
		System.out.println("long");
	}	
	
	public void accept(int ...y)
	{
		System.out.println("var args");
	}	
}
public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		Test t1 = new Test();
		t1.accept(15);

	}
}

Output
long
---------------------------------------------------------------------------
Q20) Find the Output 

public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		System.out.println("String array variable");
	}
	
	public static void main(String args) 
	{
		System.out.println("String variable");
	}
}

Output
String array variable
---------------------------------------------------------------------------
Q21) Find the Output 

public class AmbiguityDemo1
{
	public static void main(int[] args) 
	{
		System.out.println("int array variable");
	}
	
	public static void main(String args) 
	{
		System.out.println("String variable");
	}
}

Output
compilation error
Error: Main method not found in class test, please define the main method as:
   public static void main(String[] args)
--------------------------------------------------------------------------

