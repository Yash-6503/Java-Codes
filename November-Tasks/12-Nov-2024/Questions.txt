
1)Multilevel Inheritance for Employee Management

Problem Statement:
You are tasked with building a simple Employee Management System for a company. The system should track basic details for Person, Employee, and Manager roles. Each role will inherit attributes and behaviors from its parent role in a multilevel inheritance structure.

Person (Base Class):

Attributes:
name (String): Name of the person.
age (int): Age of the person.
Methods:
displayInfo(): This method should print the name and age of the person.
Employee (Intermediate Class, inherits from Person):

Additional Attribute:
employeeId (String): Unique ID for each employee.
Additional Method:
displayEmployeeInfo(): This method should call displayInfo() from the Person class and then print the employee ID.
Manager (Derived Class, inherits from Employee):

Additional Attribute:

department (String): Department name of the manager.

Additional Method:
displayManagerInfo(): This method should call displayEmployeeInfo() from the Employee class and then print the department name.

Requirements:
Define the classes Person, Employee, and Manager as described above.
Implement constructors in each class to initialize their respective attributes.
In the main program (MultilevelInheritanceExample), create an instance of the Manager class.
Call displayManagerInfo() on the Manager instance to output all details.
Sample Output:
When a Manager object is created with the following details:

Name: "Alice"
Age: 35
Employee ID: "E123"
Department: "IT"

==============================================================================================================================

2) Library System with Multilevel Inheritance
Problem Statement:
You are required to create a simple library system to manage different types of library items. The system should use multilevel inheritance to manage information about generic library items, books, and ebooks.

LibraryItem (Base Class):

Attributes:
title (String): Title of the library item.
Methods:
displayInfo(): This method should print the title of the library item.
Book (Intermediate Class, inherits from LibraryItem):

Additional Attribute:
author (String): Author of the book.
Additional Method:
displayBookInfo(): This method should call displayInfo() from the LibraryItem class to print the title, and then print the author.
Ebook (Derived Class, inherits from Book):

Additional Attribute:
fileFormat (String): File format of the ebook (e.g., PDF, EPUB).
Additional Method:
displayEbookInfo(): This method should call displayBookInfo() from the Book class to print the title and author, and then print the file format.
Requirements:
Define the classes LibraryItem, Book, and Ebook as described above.
Implement constructors in each class to initialize their respective attributes.
In the main program (LibrarySystemExample), create an instance of the Ebook class.
Call displayEbookInfo() on the Ebook instance to output all details.
Sample Output:
When an Ebook object is created with the following details:

Title: "Java Programming"
Author: "John Doe"
File Format: "PDF"